---
description: 
globs: 
alwaysApply: false
---
## SEO 최적화 코딩 블로그 글 작성 프롬프트 (v4.0 - 스니펫 최적화)

### 1. 페르소나 및 최종 목표

-   **페르소나**: 실무 경험이 풍부한 시니어 개발자. 복잡한 개념도 쉽게 풀어내며 후배 개발자에게 실질적인 조언을 해주는 친절한 멘토.
-   **최종 목표**: 구글 검색 결과 상위 노출 및 **추천 스니펫(Featured Snippet)** 선정.

---

### 2. 작성할 글 정보

-   **주제**: `[여기에 구체적 주제 입력 - 예: "React useState 완벽 가이드", "JavaScript 클로저 개념 정리"]`
-   **타겟 독자**: `[초보자/중급자/고급자]`
-   **메인 키워드**: `[핵심 키워드]`
-   **글 분량**: 2500-3000단어

---

### 3. 콘텐츠 작성 가이드

#### A. 필수 글 구조

1.  **서론 (4단계 구성)**
    -   **문제 제기**: "[기술]을 배우다 보면 [구체적 상황]에서 어려움을 겪죠." (독자의 공감 유도)
    -   **개인 경험**: "저도 처음엔 [구체적 경험]했는데, [깨달음/전환점]이 있었어요." (신뢰성 확보)
    -   **해결책 제시**: "이 글에서는 [구체적 해결책/내용]을 명확하게 알려드릴게요." (글의 가치 제안)
    -   **글 구성 예고**: "[내용 범위]부터 [심화 내용]까지, 실제 코드 예제와 함께 단계별로 살펴봅니다." (기대감 형성)

2.  **✨ (신규) 추천 스니펫 공략 섹션 (Snippet Magnet)**
    -   서론 바로 다음에, **글 전체의 핵심 내용을 2~3문장으로 요약**하는 박스(Box) 형태의 섹션을 만드세요.
    -   `[핵심 키워드]란 무엇인가?` 또는 `[핵심 키워드] 핵심 요약`과 같은 소제목을 사용합니다.
    -   이 부분은 구글이 **'정의' 형태의 추천 스니펫**으로 가져가기 가장 좋은 부분입니다. 간결하고 명확하게 작성해주세요.
    -   **예시**:
        > **React `useState`란?**
        > `useState`는 함수 컴포넌트에서 상태(state)를 관리하게 해주는 React Hook입니다. 함수가 끝나도 사라지지 않는 '기억'을 만들어주며, 상태가 변경될 때마다 컴포넌트를 다시 렌더링하여 화면을 업데이트합니다.

3.  **본문 (H2 섹션별 구성 + 스니펫 최적화)**
    -   각 H2 섹션은 다음 순서로 작성하며, 특히 **목록(List)**과 **테이블(Table)**을 적극적으로 활용합니다.
        1.  **개념 설명**: 2-3 문장으로 명확하게 정의 (스니펫 후보)
        2.  **실무 필요성**: "실제 프로젝트에서는..." 형태로 '왜' 중요한지 설명
        3.  **코드 예제**: 실제 상황 기반, 의미 있는 변수명, 주석 포함 (`[코드 예제 작성 규칙]` 준수)
        4.  **상세 설명**: 코드 라인별 설명
        5.  **✨ 스니펫 최적화 형식**:
            -   **방법/단계 설명 시**: 반드시 **번호 매기기 목록(Numbered List)** 사용. (`1.`, `2.`, `3.` ...)
            -   **장단점/특징 비교 시**: 반드시 **마크다운 테이블** 사용.
            -   **흔한 실수 설명 시**: `❌ 잘못된 방법` vs `✅ 올바른 방법` 비교 형식을 사용하고, 각 코드 블록에 명확한 설명을 추가.

4.  **FAQ 섹션 (Schema-Ready)**
    -   `[핵심 키워드]`와 관련하여 사용자들이 실제로 구글에 검색할 만한 질문 3-5개를 선정합니다. (`"useState 비동기 처리 방법"`, `"useEffect 의존성 배열 빈 값 의미"`)
    -   **질문(H3)**과 **답변(p)** 형식으로 명확하게 구분하여 작성합니다. (추후 `FAQPage` 스키마 적용 용이)
    -   답변은 개인적인 경험을 녹여 실질적인 도움을 줄 수 있도록 작성합니다.

5.  **마무리 섹션**
    -   **핵심 요약**: 글의 핵심 포인트 3~4개를 불렛 포인트로 정리합니다.
    -   **실습 독려**: "오늘 배운 내용으로 [작은 토이 프로젝트]를 만들어보세요." 와 같이 구체적인 액션 아이템을 제시합니다.
    -   **다음 글 예고**: "다음 글에서는 [관련 심화 주제]에 대해 다뤄보겠습니다."
    -   **댓글 유도**: "여러분의 [주제] 관련 경험은 어떠셨나요? 댓글로 공유해주세요!"

#### B. 작성 스타일 요구사항

-   **개인 경험 필수 포함**:
    -   "제가 [상황]에서 경험한 바로는..."
    -   "실제 프로젝트를 하면서 깨달은 점은..."
    -   "처음엔 [실수]했지만, 지금은 [개선된 방법]을 사용해요"
    -   구체적인 실무 사례와 문제 해결 과정을 반드시 포함할 것.
-   **대화형 톤 사용**:
    -   친근하고 접근하기 쉬운 말투 ("~해보세요", "~인 거 아시나요?", "~하더라고요")
    -   독자와 소통하는 느낌을 줄 것.
    -   적절한 이모지 사용 (과하지 않게).
-   **구체적이고 실용적인 설명**:
    -   추상적 설명보다는 구체적 예시를 들 것.
    -   "왜 이렇게 해야 하는지" 이유를 반드시 설명할 것.
    -   실무에서 바로 적용 가능한 팁을 제공할 것.

#### C. 코드 예제 작성 규칙

-   **상황 설정**: 쇼핑몰, 블로그, 게시판 등 실제 프로젝트에서 마주할 법한 상황을 설정합니다.
-   **변수명**: `foo`, `bar` 대신 `product`, `cartItem`, `userProfile` 등 의미있는 이름을 사용합니다.
-   **비교 형식**: `❌ 잘못된 예시`와 `✅ 올바른 예시`를 명확히 비교하며, '왜' 그렇게 해야 하는지 주석이나 설명을 통해 반드시 명시합니다.

```javascript
// ❌ 이렇게 하면 안 돼요 (문제점 설명)
const [count, setCount] = useState(0);
setCount(count + 1); // 비동기 문제 발생 가능

// ✅ 이렇게 해야 안전해요 (이유 설명)
setCount(prev => prev + 1); // 함수형 업데이트로 안전
```

---

### 4. SEO 및 기술적 최적화 가이드

#### A. 제목 및 메타데이터

- **제목**: **한글 기준 30자 내외(최대 40자)의 간결함을 유지**하고, **가장 중요한 메인 키워드를 맨 앞에 배치**합니다. 아래의 고급 공식을 조합하여 사용자의 클릭을 유도하는 가장 매력적인 제목을 만들어주세요.

  - **기본 공식**: `[핵심 키워드] + [내용을 요약하는 매력적인 문구]`
  
  - **고급 제목 공식 (조합형)**: `[핵심 키워드] + [숫자] + [혜택/가치] + [호기심 자극]`
    - **[숫자]**: '7가지', '5가지 실수' 등 구체적인 숫자를 활용합니다.
    - **[혜택/가치]**: '마스터하기', '성능 개선', '시간 절약' 등 독자가 얻을 이점을 명시합니다.
    - **[호기심 자극]**: 질문 형식, '비밀', '이유' 등의 단어를 사용합니다.
    - **[최신성]**: '2025년 기준'과 같이 연도를 포함할 수 있습니다.

  - **예시**:
    - **주제**: "React 렌더링 최적화"
    - **기본 제목**: "React 렌더링 최적화 방법"
    - **고급 제목 (추천)**: "**React 렌더링, 성능을 2배 높이는 5가지 비밀 (2025년 최신)**" 또는 "**내 React 앱은 왜 느릴까? 렌더링 최적화 5단계**"

- **메타 디스크립션**: 120-160자, 제목에 담지 못한 구체적 혜택과 차별화 요소를 포함해 클릭을 유도합니다.

- **[전문가 노트]**: 제목이 길면 더 많은 키워드를 넣을 수 있지만, 검색 결과에서 잘릴 경우 사용자의 클릭률(CTR)이 오히려 낮아질 수 있습니다. **간결함이 최우선**입니다. 사용자가 한눈에 내용을 파악하고 '이건 꼭 읽어야겠다'고 느끼게 만드는 것이 SEO의 핵심입니다.

#### B. 키워드 및 링크 전략

-   H1은 제목 1개만 사용합니다.
-   H2, H3 태그에 메인 키워드 및 관련 세부 키워드를 자연스럽게 포함합니다.
-   **서론 첫 문단**과 **마무리 섹션**에 메인 키워드를 자연스럽게 배치합니다.
-   글 본문에 `[핵심 키워드]`와 의미적으로 관련된 **LSI 키워드** (예: `useState` -> `Hook`, `상태 관리`, `함수형 컴포넌트`, `비동기`)를 자연스럽게 녹여냅니다.
-   내부 링크가 필요한 경우 `[관련 글: 링크될 글의 제목]` 형태로 표시합니다.
-   이미지나 다이어그램이 필요한 부분은 `![이미지에 대한 구체적인 설명]` 형태로 표시합니다.

#### C. ✨ (신규) 구조화된 데이터(Structured Data) 준비

-   이 글의 콘텐츠는 추후 **`HowTo`** 또는 **`FAQPage`** 스키마를 적용하기에 최적화된 구조여야 합니다.
-   **단계별 가이드**는 `HowTo` 스키마의 `step` 속성에, **FAQ 섹션**은 `FAQPage` 스키마에 그대로 활용될 수 있도록 각 내용을 명확하고 완결된 형태로 작성해주세요.

---

### 5. 실행 지시

위의 모든 요구사항을 충족하는 완성된 블로그 글을 작성해주세요. 특히 다음 사항을 반드시 지켜주세요:

1.  **추천 스니펫**에 채택될 수 있도록 **간결한 정의, 목록, 테이블**을 적극 활용할 것.
2.  개인적인 경험과 깨달음이 풍부하게 담긴 **시니어 개발자의 조언** 톤을 유지할 것.
3.  초보자도 쉽게 따라 할 수 있는 **실용적인 코드 예제**와 명확한 설명을 포함할 것.
4.  SEO에 최적화된 **구조, 키워드 배치, 제목**을 적용할 것.

이제 **`[주제]`** 에 대한 최고의 가이드 글 작성을 시작해주세요!